server:
  port: 2101

  undertow:
    threads:
      # IO线程数最大线程数（主要：接收/发送请求）, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个读线程和一个写线程
      io: 5
      # 工作线程池最大线程数 一般是io * 8（主要：处理请求、处理业务逻辑、生成响应）, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
      worker: 40
    buffer-size: 1024
    # 是否分配的直接内存(NIO直接分配的堆外内存)，这里开启，所以java启动参数需要配置下直接内存大小，减少不必要的GC
    # 在内存大于 128 MB 时，默认就是使用直接内存的
    direct-buffers: true

spring:
  application:
    name: provider-base
  profiles:
    active: alpha
  config:
    import:
      - optional:nacos:mybatis-plus.yaml

  data:
    mongodb:
      database: alpha
      auto-index-creation: true
      field-naming-strategy: org.springframework.data.mapping.model.SnakeCaseFieldNamingStrategy
      uri: mongodb://21:21@47.120.38.241:27017

  datasource:
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    url: jdbc:p6spy:mysql://47.120.38.241:3306/base?tinyInt1isBit=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useSSL=false
    username: 21
    password: fuck_COM_520
    hikari:
      #是否自动提交事务
      auto-commit: true
      #连接超时时间（理论上要小于网关超时时间）
      connection-timeout: 900
      #连接的空闲超时时间。如果连接在一段时间内没有被使用（空闲），则会被连接池关闭
      idle-timeout: 50000
      #获取连接的超时时间
      login-timeout: 5
      #连接池中的最长生命周期
      max-lifetime: 600000
      # seata首次访问数据库需要验证undo_log 其中包含delete操作，所以将只读关闭
      read-only: false
      #连接池的验证超时时间（有时候连接在空闲一段时间后可能会失效，比如数据库重启或网络故障等原因。为了确保从连接池中获取的连接仍然有效，对连接进行验证）
      validation-timeout: 3000
      #连接池的最大连接数 超过这个数量的连接将等待其他连接被释放
      maximum-pool-size: 15
      #连接池的最小空闲连接数 指定连接池中保持的最小空闲连接数，即使没有活动的连接需求，也要保持这些连接保持打开状态
      minimum-idle: 5
  cloud:
    nacos:
      discovery:
        server-addr: 47.94.0.13:8848
        group: ALPHA_GROUP
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}

mybatis-plus:
  type-aliases-package: com.example.provider.base.model
  global-config:
    banner: off



logging:
  config: file:./commons/commons-core/src/main/resources/log4j2-local.xml